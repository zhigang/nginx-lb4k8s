## Generated by confd {{datetime}} ##
############## upstream  ##############
{{ $services := ( getvs "/registry/services/specs/*/*" ) -}}

{{ range $services -}}
    {{ $service := ( json . ) -}}
    {{ if $service.metadata.annotations -}}
    {{ if index $service.metadata.annotations "nginx.gateway.type" -}}
        {{ range $service.spec.ports -}}
            {{ if .name }}
                upstream {{$service.metadata.namespace}}_{{replace $service.metadata.name "-" "_" -1}}_{{ .name }} {
            {{ else }}
                upstream {{$service.metadata.namespace}}_{{replace $service.metadata.name "-" "_" -1}} {
            {{ end }}
                    least_conn;
                    server  {{$service.metadata.name}}.{{$service.metadata.namespace}}:{{ .targetPort }};
                    keepalive 100;
                }
        {{ end -}}
    {{ end -}}
    {{ end -}}
{{ end -}}

############## webapi ##############

server {
    listen 80 ;
    server_name gateway.mydomain.com;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }
    location /robots.txt {
        access_log off;
        return 200 "User-agent: *\nDisallow: /\n";
    }
    location /ping {
        access_log off;
        return 200 "pong";
    }
    location /MP_verify_hQ9qajFqHR58syj9.txt {
        access_log off;
        return 200 "hQ9qajFqHR58syj9";
    }

    {{range $services -}}
        {{ $service := ( json . ) -}}
        {{ if $service.metadata.annotations -}}
        {{ if index $service.metadata.annotations "nginx.gateway.type" -}}
        {{ if eq (index $service.metadata.annotations "nginx.gateway.type") "api" -}}
            {{ range $service.spec.ports -}}
                {{ if index $service.metadata.annotations "nginx.gateway.url" -}}
                    {{ if .name }}
                    location ^~ /{{ index $service.metadata.annotations "nginx.gateway.url" }}/{{ .name }}/ {
                    {{ else }}
                    location ^~ /{{ index $service.metadata.annotations "nginx.gateway.url" }}/ {
                    {{ end -}}
                {{ else }}
                    {{ if .name }}
                    location ^~ /{{$service.metadata.namespace}}/{{ $service.metadata.name }}/{{ .name }}/ {
                    {{ else }}
                    location ^~ /{{$service.metadata.namespace}}/{{ $service.metadata.name }}/ {
                    {{ end -}}
                {{ end }}
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto $scheme;
                        proxy_set_header Connection keep-alive;
                        #proxy_http_version 1.1;
                        #proxy_set_header Upgrade $http_upgrade;
                        #proxy_cache_bypass $http_upgrade;
                        {{ if .name }}
                        proxy_pass http://{{$service.metadata.namespace}}_{{replace $service.metadata.name "-" "_" -1}}_{{ .name }}/;
                        {{ else }}
                        proxy_pass http://{{$service.metadata.namespace}}_{{replace $service.metadata.name "-" "_" -1}}/;
                        {{ end }}
                    }
            {{ end -}}
        {{ end -}}
        {{ end -}}
        {{ end -}}
    {{ end -}}
}

############## website ##############

{{range $services -}}
    {{ $service := ( json . ) -}}
    {{ if $service.metadata.annotations -}}
    {{ if index $service.metadata.annotations "nginx.gateway.type" -}}
    {{ if eq (index $service.metadata.annotations "nginx.gateway.type") "website" -}}

        server {
            listen 80;

            {{ if index $service.metadata.annotations "nginx.gateway.domain" -}}
            server_name {{ index $service.metadata.annotations "nginx.gateway.domain"}};
            {{ end -}}

            {{ range $service.spec.ports -}}
                {{ if .name }}
                    {{ if eq .name "http" -}}
                    location / {
                    {{else}}
                    location ^~ /{{ .name }}/ {
                    {{ end -}}
                {{ else }}
                    location / {
                {{ end }}
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto $scheme;
                        {{ if .name }}
                        proxy_pass http://{{$service.metadata.namespace}}_{{replace $service.metadata.name "-" "_" -1}}_{{ .name }}/;
                        {{ else }}
                        proxy_pass http://{{$service.metadata.namespace}}_{{replace $service.metadata.name "-" "_" -1}}/;
                        {{ end }}
                    }
            {{ end -}}

            location /robots.txt {
                access_log off;
                return 200 "User-agent: *\nDisallow: /\n";
            }
            location /ping {
                access_log off;
                return 200 "pong";
            }
        }
    {{ end -}}
    {{ end -}}
    {{ end -}}
{{ end -}}